<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<db:config name="Database_Config" doc:name="Database Config" doc:id="f3f9f2a1-649c-4fce-9765-83d23d21063b" >
		<db:my-sql-connection host="localhost" port="3306" user="root" database="xys_store" />
	</db:config>
	<sub-flow name="get:\customer\(id)\orders:tp2-sl-order-xys-config_SubFlow" doc:id="2296528c-45e5-4d14-8a42-43d778f7d768" >
		<db:select doc:name="seleciona encomenda especifica por id" doc:id="cb0cc9b9-dcf2-4b52-9562-901b51776ca7" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT
   O.id_order AS order_id,
    c.id AS customer_id,
    p.name AS product_name,
    o.purchase_date,
    p.price,
    o.carrier,
    CONCAT(c.name, ' ', c.last_name) AS customer_name,
    TIMESTAMPDIFF(YEAR, c.date_of_birth, CURDATE()) AS customer_age,
    c.address,

    c.identity_card


FROM
    customers c
    
right JOIN
    orders o ON c.id = o.id_customer
left JOIN
    products p ON o.id_product = p.id_product
    
 WHERE id = :id

GROUP BY
    o.id_order;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="filtra o output das encomendas" doc:id="85686473-ebad-47b8-9469-31bc4d88a9e3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    order_id: payload.order_id,
    customer_id: payload.customer_id,
    costumer_name: payload.customer_name,
    costumer_age: payload.customer_age,
    product_name: payload.product_name,
    purchase_date: payload.purchase_date,
    price: payload.price,
    carrier: payload.carrier,
    address: payload.address,
    identity_card: payload.identity_card,

}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="get:\order\(id):tp2-sl-order-xys-config_SubFlow" doc:id="1e558166-ac84-4751-8218-6aa3566ffd13" >
		<choice doc:name="Choice" doc:id="dc0deda4-345c-49a6-a3e1-69699fdb9cc4" >
			<when expression='#[vars.id == "0"]'>
				<db:select doc:name="selecionar todas as orders, organizadas com cada cliente, cada produto" doc:id="25695f95-aa03-4e26-b8e5-8b28c96bb4a9" config-ref="Database_Config" >
					<db:sql ><![CDATA[SELECT
   O.id_order AS order_id,
    c.id AS customer_id,
    p.name AS product_name,
    o.purchase_date,
    p.price,
    o.carrier,
    CONCAT(c.name, ' ', c.last_name) AS customer_name,
    TIMESTAMPDIFF(YEAR, c.date_of_birth, CURDATE()) AS customer_age,
    c.address,

    c.identity_card


FROM
    customers c
    
right JOIN
    orders o ON c.id = o.id_customer
left JOIN
    products p ON o.id_product = p.id_product

GROUP BY
    o.id_order;
]]></db:sql>
				</db:select>
				<ee:transform doc:name="filtra o output das encomendas" doc:id="7126ea80-3256-4be4-aa52-7bf11cdf89d1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

payload map ((item, index) -> 
{
    order_id: item.order_id,
    customer_id: item.customer_id,
    costumer_name: item.customer_name,
    costumer_age: item.customer_age,
    product_name: item.product_name,
    purchase_date: item.purchase_date,
    price: item.price,
    carrier: item.carrier,
    address: item.address,
    identity_card: item.identity_card,

})]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<db:select doc:name="seleciona encomenda especifica por id" doc:id="f83c9e9c-9707-4c69-9bf2-ad0b0785e2ff" config-ref="Database_Config" >
					<db:sql ><![CDATA[SELECT
   O.id_order AS order_id,
    c.id AS customer_id,
    p.name AS product_name,
    o.purchase_date,
    p.price,
    o.carrier,
    CONCAT(c.name, ' ', c.last_name) AS customer_name,
    TIMESTAMPDIFF(YEAR, c.date_of_birth, CURDATE()) AS customer_age,
    c.address,

    c.identity_card


FROM
    customers c
    
right JOIN
    orders o ON c.id = o.id_customer
left JOIN
    products p ON o.id_product = p.id_product
    
 WHERE id_order = :id

GROUP BY
    o.id_order;
]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	id: vars.id
}]]]></db:input-parameters>
				</db:select>
				<ee:transform doc:name="filtra o output das encomendas" doc:id="9708e0c7-6083-4085-803e-00f72e8f85d5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
    order_id: payload.order_id,
    customer_id: payload.customer_id,
    costumer_name: payload.customer_name,
    costumer_age: payload.customer_age,
    product_name: payload.product_name,
    purchase_date: payload.purchase_date,
    price: payload.price,
    carrier: payload.carrier,
    address: payload.address,
    identity_card: payload.identity_card,

}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="post:\customer\order:application\json:tp2-sl-order-xys-config_SubFlow" doc:id="f243f2e2-babf-4c5b-8ea9-03004aae2cb3" >
		<db:select doc:name="Select" doc:id="17ae4b9c-1b75-47b4-95f4-9cf29fe1f270" config-ref="Database_Config">
			<db:sql ><![CDATA[select * customer where id = :id]]></db:sql>
		</db:select>
		<db:insert doc:name="insert na base de dados da order" doc:id="fb0eecca-a6c6-4d77-afd0-4c3d72dd1a27" config-ref="Database_Config" >
			<db:sql ><![CDATA[INSERT INTO orders (id_customer, id_product, details, carrier, purchase_date)
VALUES (:id_customer, :id_product, :details, :carrier, :purchase_date);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
  id_customer: payload.id_customer,	
  id_product: payload.product_name,
  datails: payload.details,
  carrier: payload.carrier,
  purchase_date: now()
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="query para devolver a última compra inserida" doc:id="3f1dd9c4-64cb-4bae-a4e9-34fa430de392" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT MAX(id_order) AS maxid
WHERE id = (SELECT MAX(id_order) FROM orders);
]]></db:sql>
		</db:select>
		<ee:transform doc:name="resposta da requisição" doc:id="42288079-311e-408d-a93f-25035f289dc9" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

{
	
id: payload.maxid[0],
name: payload.name[0]
	
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
